class Solution {
public:
    int surfaceArea(vector<vector<int>>& grid) {
        int ans = 0;
        for(int i=0;i<grid.size();i++){
            for(int j=0;j<grid[0].size();j++){       
                if(grid[i][j]>0){
                    ans+=2;
                    //now look into up down left right neighbours for getting visible area of face in                           each direction
                    
                    //down
                    if( i+1 < grid.size() ){
                        int x = i+1;
                        if(grid[x][j] < grid[i][j]){
                            ans += (grid[i][j] - grid[x][j]); 
                        }
                    }
                    else{
                        ans += (grid[i][j]);
                    }
        
                    //up
                    if( i-1 >= 0 ){
                         int x = i-1;
                        if(grid[x][j] < grid[i][j]){
                            ans += (grid[i][j] - grid[x][j]); 
                        }
                    }
                    else{
                        ans += grid[i][j];
                    }
                    
                    //right
                    if( j+1 < grid[0].size() ){
                        int y = j+1;
                        if(grid[i][y] < grid[i][j]){
                            ans += (grid[i][j] - grid[i][y]); 
                        }
                    }
                    else{
                        ans += grid[i][j];
                    }
                    
                    //left
                     if( j - 1 >= 0 ){
                        int y = j - 1;
                        if(grid[i][y] < grid[i][j]){
                            ans += (grid[i][j] - grid[i][y]); 
                        }
                    }
                    else{
                        ans += grid[i][j];
                    }
                }
            }
        }
        return ans;
    }
};